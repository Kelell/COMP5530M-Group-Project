CREATE TABLE ingredients (
ingredient_id INT NOT NULL GENERATED ALWAYS AS IDENTITY,
ingredient_name VARCHAR(150) NOT NULL,
priority_level INT NOT NULL,
PRIMARY KEY(ingredient_id)
);

CREATE TABLE recipes (
recipe_id INT NOT NULL,
recipe_name VARCHAR(150) NOT NULL,
course VARCHAR(50) NOT NULL,
cuisine VARCHAR(100) NOT NULL,
preparation VARCHAR(50) NOT NULL,
cooking_length VARCHAR(50) NOT NULL,
spice_level VARCHAR(20) NOT NULL,
dairy BOOLEAN NOT NULL,
gluten BOOLEAN NOT NULL,
vegan BOOLEAN NOT NULL,
vegetarian BOOLEAN NOT NULL,
link VARCHAR(200) NOT NULL,
PRIMARY KEY(recipe_id)
);

CREATE TABLE recipes_ingredients (
recipe_id INT NOT NULL,
ingredient_id INT NOT NULL,
CONSTRAINT fk_recipe
FOREIGN KEY (recipe_id)
REFERENCES recipes(recipe_id) ON DELETE CASCADE,
CONSTRAINT fk_ingredient
FOREIGN KEY (ingredient_id)
REFERENCES ingredients(ingredient_id) ON DELETE CASCADE
) ORGANIZE BY ROW;


CREATE TABLE users ( user_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
username VARCHAR(150) NOT NULL,
password VARCHAR(150) NOT NULL,
gluten BOOLEAN NOT NULL,
dairy BOOLEAN NOT NULL,
vegan BOOLEAN NOT NULL,
vegetarian BOOLEAN NOT NULL,
PRIMARY KEY(user_id) );

CREATE TABLE user_favourites ( user_id INT NOT NULL,
recipe_id INT NOT NULL,
CONSTRAINT fk_recipe FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id) ON DELETE CASCADE,
CONSTRAINT user_id
FOREIGN KEY (user_id)
REFERENCES users(user_id) ON DELETE CASCADE ) ORGANIZE BY ROW;

CREATE TABLE pantry(
user_id INT NOT NULL,
ingredient_id INT NOT NULL,
CONSTRAINT fk_user
FOREIGN KEY(user_id)
REFERENCES users(user_id) ON DELETE CASCADE,
CONSTRAINT fk_ingredient
FOREIGN KEY (ingredient_id)
REFERENCES ingredients(ingredient_id) ON DELETE CASCADE
) ORGANIZE BY ROW;


set integrity for recipes_ingredients immediate checked;
set integrity for user_favourites immediate checked;
set integrity for pantry immediate checked;
